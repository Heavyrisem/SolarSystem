{"version":3,"sources":["hooks/useRotateAnim.tsx","component/Planet.tsx","component/Orbit.tsx","component/Starfield.tsx","component/Asteroidbelt.tsx","img/MercuryShadow.svg","img/VenusShadow.svg","img/EarthShadow.svg","img/MoonShadow.svg","img/MarsShadow.svg","img/JupiterShadow.svg","img/SaturnShadow.svg","img/UranusShadow.svg","img/NeptuneShadow.svg","component/FPS.tsx","component/Config.tsx","img/Solar.svg","component/Solar.tsx","component/Main.tsx","reportWebVitals.ts","index.tsx"],"names":["useRotationAnim","orbitalCycleDay","overrideStyle","style","useState","rotation","setRotation","Rotate","useCallback","useEffect","requestAnimationFrame","useMemo","transform","join","Planet","children","img","size","rootStyle","width","imgStyle","height","className","src","Orbit","radius","origin","startRotation","Starfield","CanvasRef","useRef","current","context","getContext","i","x","Math","random","offsetWidth","y","offsetHeight","beginPath","arc","fillStyle","fill","document","body","ref","Asteroidbelt","zIndex","RemToPx","n","parseFloat","getComputedStyle","documentElement","fontSize","canvas","console","log","setProperty","FPS","fps","setFps","Perf","performance","now","Counter","delta","toFixed","Config","props","type","defaultValue","SpaceTime","onChange","e","setSpaceTime","Number","target","value","Scale","setScale","textAlign","Solar","Style","position","top","left","display","verticalAlign","margin","filter","SolarSvg","Main","MercurySvg","VenusSvg","EarthSvg","MoonSvg","MarsSvg","JupiterSvg","SaturnSvg","UranusSvg","NpetuneSvg","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.18c8c43d.chunk.js","sourcesContent":["import React, { useCallback, useEffect, useMemo, useState } from \"react\";\n\nexport interface RotationAnimProps {\n  orbitalCycleDay: number;\n  style?: React.CSSProperties;\n}\n\nfunction useRotationAnim({\n  orbitalCycleDay,\n  style: overrideStyle,\n}: RotationAnimProps) {\n  const [rotation, setRotation] = useState<number>(0);\n\n  const Rotate = useCallback(() => {\n    let Speed = 360 / (orbitalCycleDay * 86400);\n    setRotation(rotation - Speed);\n  }, [rotation, orbitalCycleDay]);\n\n  useEffect(() => {\n    requestAnimationFrame(Rotate);\n  }, [Rotate]);\n\n  const style: React.CSSProperties = useMemo(() => {\n    const { transform } = overrideStyle ?? { transform: \"\" };\n\n    const temp = {\n      ...overrideStyle,\n      transform: [transform, `rotate(${rotation}deg)`].join(\" \"),\n    };\n    return temp;\n  }, [rotation, overrideStyle]);\n\n  return {\n    rotation,\n    style,\n  };\n}\n\nexport default useRotationAnim;\n","import React, { useMemo } from \"react\";\nimport \"../style/Planet.css\";\n\ninterface PlanetP {\n  children?: any;\n  img: string;\n  size: number;\n  shadow?: boolean;\n  orbitalCycleDay: number;\n  origin?: boolean;\n}\nconst Planet: React.FC<PlanetP> = ({ children, img, size }) => {\n  const rootStyle = useMemo(\n    () => ({\n      width: `${size}rem`,\n    }),\n    [size]\n  );\n\n  const imgStyle = useMemo(\n    () => ({\n      width: `${size}rem`,\n      height: `${size}rem`,\n    }),\n    [size]\n  );\n\n  return (\n    <div className=\"Planet\" style={rootStyle}>\n      <img src={img} style={imgStyle} />\n      {/* {props.shadow&&\n                <img className=\"Planet Shadow\" src={Shadow} style={{width: props.size+'rem', transform: 'translate(-50%)'}} />\n            } */}\n      {children}\n    </div>\n  );\n};\n\nexport default Planet;\n","import React from \"react\";\nimport useRotationAnim from \"../hooks/useRotateAnim\";\nimport \"../style/Orbit.css\";\nimport Planet from \"./Planet\";\n\ninterface OrbitProps {\n  children?: any;\n  radius: number;\n  size: number;\n  img: string;\n  orbitalCycleDay: number;\n  origin?: boolean;\n  startRotation?: number;\n}\n\nconst Orbit: React.FC<OrbitProps> = ({\n  children,\n  radius,\n  size,\n  img,\n  orbitalCycleDay,\n  origin,\n  startRotation,\n}) => {\n  const { style } = useRotationAnim({\n    orbitalCycleDay,\n    style: {\n      width: radius + \"rem\",\n      height: radius + \"rem\",\n      transform: \"translate(-50%, -50%)\",\n    },\n  });\n\n  return (\n    <div className=\"Orbit\" style={style}>\n      <Planet\n        img={img}\n        size={size}\n        orbitalCycleDay={orbitalCycleDay}\n        origin={origin}\n      >\n        {children}\n      </Planet>\n    </div>\n  );\n};\n\nexport default Orbit;\n","import React, { useEffect, useRef } from \"react\";\nimport '../style/Starfield.css';\n\n\nfunction Starfield() {\n    const CanvasRef = useRef<HTMLCanvasElement>(null);\n    const Stars = 500;\n\n    const Style: React.CSSProperties = {\n\t    background: ''\n    }\n\n    useEffect(() => {\n        if (CanvasRef.current) {\n\n            let context = CanvasRef.current.getContext(\"2d\") as CanvasRenderingContext2D;\n            for (let i = 0; i < Stars; i++) {\n                let x = Math.random() * CanvasRef.current.offsetWidth;\n                let y = Math.random() * CanvasRef.current.offsetHeight;\n                let radius = Math.random() * 1.1;\n                context.beginPath();\n                context.arc(x, y, radius, 0, 360);\n                context.fillStyle = \"rgba(223, 223, 223, 0.8)\";\n                context.fill();\n            }\n\n        }\n    }, []);\n\n    return (\n        <canvas className=\"Starfield\" width={document.body.offsetWidth} height={document.body.offsetHeight} ref={CanvasRef}>\n            \n        </canvas>\n    )       \n}\n\nexport default Starfield;","import React, { useEffect, useRef } from \"react\";\nimport useRotationAnim from \"../hooks/useRotateAnim\";\nimport \"../style/Asteroidbelt.css\";\n\ninterface AsteroidbeltProps {\n  radius: number;\n  size: number;\n  orbitalCycleDay: number;\n}\nconst Asteroidbelt: React.FC<AsteroidbeltProps> = ({\n  radius,\n  size,\n  orbitalCycleDay,\n}) => {\n  const CanvasRef = useRef<HTMLCanvasElement>(null);\n\n  const { style } = useRotationAnim({\n    orbitalCycleDay,\n    style: {\n      width: radius + \"rem\",\n      height: radius + \"rem\",\n      zIndex: 5,\n      transform: \"translate(-50%, -50%)\",\n    },\n  });\n\n  useEffect(() => {\n    const { current: canvas } = CanvasRef;\n\n    if (canvas) {\n      console.log(\"Draw\", canvas);\n      let context = canvas.getContext(\"2d\") as CanvasRenderingContext2D;\n\n      context.fillStyle = \"white\";\n\n      for (let i = 0; i < 1000; i++) {\n        let x = Math.random() * canvas.offsetWidth;\n        let y = Math.random() * canvas.offsetHeight;\n        let radius = Math.random() * 2;\n        context.beginPath();\n        context.arc(x, y, radius, 0, 360);\n        context.fillStyle = \"rgba(223, 223, 223, 0.5)\";\n        context.fill();\n        // context.fillRect(x,y,1,1);\n      }\n\n      canvas.style.setProperty(\n        \"--circle\",\n        `${(RemToPx(radius) - RemToPx(size)) / 2}px`\n      );\n    }\n  }, [radius, size]);\n\n  function RemToPx(n: number): number {\n    return n * parseFloat(getComputedStyle(document.documentElement).fontSize);\n  }\n\n  return (\n    <canvas\n      className=\"Asteroidbelt\"\n      ref={CanvasRef}\n      style={style}\n      width={RemToPx(radius)}\n      height={RemToPx(radius)}\n    ></canvas>\n  );\n};\n\nexport default Asteroidbelt;\n","export default __webpack_public_path__ + \"static/media/MercuryShadow.9bfa5c8f.svg\";","export default __webpack_public_path__ + \"static/media/VenusShadow.5c08475f.svg\";","export default __webpack_public_path__ + \"static/media/EarthShadow.327277ae.svg\";","export default __webpack_public_path__ + \"static/media/MoonShadow.9602b674.svg\";","export default __webpack_public_path__ + \"static/media/MarsShadow.579d892e.svg\";","export default __webpack_public_path__ + \"static/media/JupiterShadow.47dd45c0.svg\";","export default __webpack_public_path__ + \"static/media/SaturnShadow.a45e5467.svg\";","export default __webpack_public_path__ + \"static/media/UranusShadow.dc12a817.svg\";","export default __webpack_public_path__ + \"static/media/NeptuneShadow.f1c14a74.svg\";","import React, { useEffect, useState } from 'react';\n\nfunction FPS() {\n    const [fps, setFps] = useState(\"\");\n    let Perf = performance.now();\n\n    useEffect(Counter, []);\n\n    function Counter() {\n        let delta = (performance.now() - Perf) / 1000;\n        Perf = performance.now();\n\n        setFps((1/delta).toFixed(2));\n        requestAnimationFrame(Counter);\n    }\n\n    return (\n        <span className=\"FPS\">\n            {fps}\n        </span>\n    )\n}\n\nexport default FPS;","import React from 'react';\nimport '../style/Config.css';\n\nimport FPS from './FPS';\n\ninterface ConfigP {\n    SpaceTime: number,\n    setSpaceTime: React.Dispatch<React.SetStateAction<number>>,\n    Scale: number,\n    setScale: React.Dispatch<React.SetStateAction<number>>,\n}\nfunction Config(props: ConfigP) {\n    return (\n        <div className=\"Config\">\n            <span>Config</span>\n            <div>\n                <span>Time</span> <input type=\"number\" defaultValue={props.SpaceTime} onChange={(e) => {props.setSpaceTime(Number(e.target.value) | 1)}}/>\n            </div>\n            <div>\n                <span>Scale</span> <input type=\"number\" defaultValue={props.Scale} onChange={(e) => {props.setScale(Number(e.target.value))}}/>\n            </div>\n            <div style={{textAlign: 'left'}}>\n                <span>FPS: </span> <FPS />\n            </div>\n        </div>\n    )\n}\n\nexport default Config;","export default __webpack_public_path__ + \"static/media/Solar.537a82ef.svg\";","import SolarSvg from \"../img/Solar.svg\";\n\ninterface SolarProps {\n  children?: any;\n  size: number;\n}\nconst Solar: React.FC<SolarProps> = ({ children, size }) => {\n  const Style: React.CSSProperties = {\n    width: size + \"rem\",\n    height: size + \"rem\",\n    position: \"absolute\",\n    top: \"50%\",\n    left: \"50%\",\n    transform: \"translate(-50%, -50%)\",\n    display: \"flex\",\n    verticalAlign: \"middle\",\n    textAlign: \"center\",\n    margin: \"auto\",\n    filter: \"drop-shadow(0 0 20px #f3ad0d)\",\n  };\n  return (\n    <div style={{ width: \"100%\" }}>\n      <img src={SolarSvg} style={Style} />\n      {children}\n    </div>\n  );\n};\n\nexport default Solar;\n","import React, { useState } from \"react\";\nimport Orbit from \"./Orbit\";\nimport Starfield from \"./Starfield\";\nimport Asteroidbelt from \"./Asteroidbelt\";\n\nimport MercurySvg from \"../img/MercuryShadow.svg\";\nimport VenusSvg from \"../img/VenusShadow.svg\";\nimport EarthSvg from \"../img/EarthShadow.svg\";\nimport MoonSvg from \"../img/MoonShadow.svg\";\nimport MarsSvg from \"../img/MarsShadow.svg\";\nimport JupiterSvg from \"../img/JupiterShadow.svg\";\nimport SaturnSvg from \"../img/SaturnShadow.svg\";\nimport UranusSvg from \"../img/UranusShadow.svg\";\nimport NpetuneSvg from \"../img/NeptuneShadow.svg\";\nimport Config from \"./Config\";\nimport Solar from \"./Solar\";\n\nfunction Main() {\n  const [SpaceTime, setSpaceTime] = useState<number>(10000);\n  const [Scale, setScale] = useState<number>(0.6);\n\n  return (\n    <>\n      <Config\n        SpaceTime={SpaceTime}\n        setSpaceTime={setSpaceTime}\n        Scale={Scale}\n        setScale={setScale}\n      />\n      <Starfield />\n      <Solar size={4 * Scale}>\n        <Orbit\n          radius={8 * Scale}\n          size={0.95 * Scale}\n          img={MercurySvg}\n          orbitalCycleDay={88 / SpaceTime}\n        />\n        <Orbit\n          radius={15 * Scale}\n          size={0.95 * 1.5 * Scale}\n          img={VenusSvg}\n          orbitalCycleDay={225 / SpaceTime}\n        />\n        <Orbit\n          radius={23 * Scale}\n          size={0.95 * 1.6 * Scale}\n          img={EarthSvg}\n          orbitalCycleDay={365 / SpaceTime}\n        >\n          <Orbit\n            radius={5 * Scale}\n            size={0.95 * Scale}\n            img={MoonSvg}\n            orbitalCycleDay={27 / SpaceTime}\n            origin={true}\n          />\n        </Orbit>\n        <Orbit\n          radius={38 * Scale}\n          size={0.95 * 3.2 * Scale}\n          img={MarsSvg}\n          orbitalCycleDay={687 / SpaceTime}\n        />\n        <Asteroidbelt\n          radius={55 * Scale}\n          size={10 * Scale}\n          orbitalCycleDay={4343.5 / SpaceTime}\n        />\n        <Orbit\n          radius={60 * Scale}\n          size={0.95 * 5 * Scale}\n          img={JupiterSvg}\n          orbitalCycleDay={4380 / SpaceTime}\n        />\n        <Orbit\n          radius={70 * Scale}\n          size={0.95 * 3 * Scale}\n          img={SaturnSvg}\n          orbitalCycleDay={10585 / SpaceTime}\n        />\n        <Orbit\n          radius={80 * Scale}\n          size={0.95 * 4 * Scale}\n          img={UranusSvg}\n          orbitalCycleDay={30660 / SpaceTime}\n        />\n        <Orbit\n          radius={90 * Scale}\n          size={0.95 * 3.5 * Scale}\n          img={NpetuneSvg}\n          orbitalCycleDay={60225 / SpaceTime}\n        />\n      </Solar>\n    </>\n  );\n}\n\nexport default Main;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './style/index.css';\nimport Main from './component/Main';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Main />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}