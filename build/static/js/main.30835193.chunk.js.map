{"version":3,"sources":["component/Planet.tsx","component/Orbit.tsx","component/Starfield.tsx","component/Asteroidbelt.tsx","img/Solar.svg","img/MercuryShadow.svg","img/VenusShadow.svg","img/EarthShadow.svg","img/MoonShadow.svg","img/MarsShadow.svg","img/JupiterShadow.svg","img/SaturnShadow.svg","img/UranusShadow.svg","img/NeptuneShadow.svg","component/FPS.tsx","component/Config.tsx","component/Main.tsx","reportWebVitals.ts","index.tsx"],"names":["Planet","props","FrameReq","Rotation","PlaRef","useRef","Rotate","current","Speed","orbitalCycleDay","style","transform","join","requestAnimationFrame","useEffect","origin","console","log","cancelAnimationFrame","className","ref","width","size","src","img","height","children","Orbit","Orb","Style","radius","Starfield","CanvasRef","context","getContext","i","x","Math","random","offsetWidth","y","offsetHeight","beginPath","arc","fillStyle","fill","document","body","Asteroidbelt","RemToPx","n","parseFloat","getComputedStyle","documentElement","fontSize","setProperty","zIndex","FPS","useState","fps","setFps","Perf","performance","now","Counter","delta","toFixed","Config","type","defaultValue","SpaceTime","onChange","e","setSpaceTime","Number","target","value","Scale","setScale","textAlign","Solar","position","top","left","display","verticalAlign","margin","filter","SolarSvg","refs","Main","SolarRef","MercurySvg","VenusSvg","EarthSvg","MoonSvg","MarsSvg","JupiterSvg","SaturnSvg","UranusSvg","NpetuneSvg","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.30835193.chunk.js","sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport '../style/Planet.css';\n\nimport Shadow from '../img/PlanetShadow.svg';\n\ninterface PlanetP {\n    children?: any,\n    img: string,\n    size: number,\n    shadow?: boolean,\n    orbitalCycleDay: number,\n    origin?: boolean\n}\nfunction Planet(props: PlanetP) {\n    // const [FrameReq, setFrameReq] = useState<number>(-1);\n    let FrameReq = -1;\n    let Rotation = 0;\n    const PlaRef = useRef<HTMLDivElement>(null);\n    \n    function Rotate() {\n        if (PlaRef.current) {\n            let Speed = 360 / (props.orbitalCycleDay * 86400);\n            Rotation += Speed;\n            PlaRef.current.style.transform = ['translate(-50%, -50%)', `rotate(${Rotation}deg)`].join(' ')\n            FrameReq = (requestAnimationFrame(Rotate));\n        }\n    }\n\n    useEffect(() => {\n        if (props.origin) {\n            FrameReq = (requestAnimationFrame(Rotate));\n            console.log(\"Update\");\n            return () => {\n                console.log(\"Cancle\", FrameReq);\n                cancelAnimationFrame(FrameReq);\n            }\n        }\n    }, [props]);\n\n    const Style: React.CSSProperties = {\n        // transform: ['translate(-50%, -50%)', `rotate(${Rotation}deg)`].join(' '),\n        // animation: (!props.children)? `PlanetRotate infinite ${props.orbitalCycleDay * 86400 }s linear`:''\n    }\n    \n    return (\n        <div className=\"Planet\" ref={PlaRef} style={{width: props.size+'rem'}}>\n            <img src={props.img} style={{width: props.size+'rem', height: props.size+'rem'}} />\n            {/* {props.shadow&&\n                <img className=\"Planet Shadow\" src={Shadow} style={{width: props.size+'rem', transform: 'translate(-50%)'}} />\n            } */}\n            {props.children}\n        </div>\n    )\n}\n\nexport default Planet;","import React, { useEffect, useRef, useState } from 'react';\nimport '../style/Orbit.css';\nimport Planet from './Planet';\n\ninterface props {\n    children?: any,\n    radius: number,\n    size: number,\n    img: string,\n    orbitalCycleDay: number,\n    origin?: boolean,\n    startRotation?: number\n}\n\nfunction Orbit(props: props) {\n    // const [Rotation, setRotation] = useState<number>(0);\n    // const [FrameReq, setFrameReq] = useState<number>(-1);\n    let FrameReq = -1;\n    let Rotation = 0;\n    const Orb = useRef<HTMLDivElement>(null);\n    \n    function Rotate() {\n        if (Orb.current) {\n            let Speed = 360 / (props.orbitalCycleDay * 86400);\n            // console.log(props.orbitalCycleDay);\n            Orb.current.style.transform = ['translate(-50%, -50%)', `rotate(${Rotation -= Speed}deg)`].join(' ');\n            // console.log(\"Frame\");\n            // setRotation(Rotation + Speed);\n            // Orb.current.style.rotate = Number(Orb.current.style.rotate.replace(\"deg\", \"\")) + \"deg\";\n            FrameReq = (requestAnimationFrame(Rotate));\n        }\n    }\n\n    useEffect(() => {\n        FrameReq = (requestAnimationFrame(Rotate));\n        // console.log(\"Update\");\n        return () => {\n            console.log(\"Cancle\", FrameReq);\n            cancelAnimationFrame(FrameReq);\n        }\n    }, [props]);\n\n    // setInterval(Rotate, 300);\n\n    const Style: React.CSSProperties = {\n        width: props.radius+'rem',\n        height: props.radius+'rem',\n        transform: ['translate(-50%, -50%)'].join(' '),\n        // animation: `OrbitRotate infinite ${props.orbitalCycleDay * 86400}s linear`\n        // rotate: '0deg'\n    }\n\n    return (\n        <div className=\"Orbit\" style={Style} ref={Orb}>\n            <Planet img={props.img} size={props.size} orbitalCycleDay={props.orbitalCycleDay} origin={props.origin}>\n                {props.children}\n            </Planet>\n        </div>\n    )\n}\n\nexport default Orbit;","import React, { useEffect, useRef } from \"react\";\nimport '../style/Starfield.css';\n\n\nfunction Starfield() {\n    const CanvasRef = useRef<HTMLCanvasElement>(null);\n    const Stars = 500;\n\n    const Style: React.CSSProperties = {\n\t    background: ''\n    }\n\n    useEffect(() => {\n        if (CanvasRef.current) {\n\n            let context = CanvasRef.current.getContext(\"2d\") as CanvasRenderingContext2D;\n            for (let i = 0; i < Stars; i++) {\n                let x = Math.random() * CanvasRef.current.offsetWidth;\n                let y = Math.random() * CanvasRef.current.offsetHeight;\n                let radius = Math.random() * 1.1;\n                context.beginPath();\n                context.arc(x, y, radius, 0, 360);\n                context.fillStyle = \"rgba(223, 223, 223, 0.8)\";\n                context.fill();\n            }\n\n        }\n    }, []);\n\n    return (\n        <canvas className=\"Starfield\" width={document.body.offsetWidth} height={document.body.offsetHeight} ref={CanvasRef}>\n            \n        </canvas>\n    )       \n}\n\nexport default Starfield;","import React, { useEffect, useRef, useState } from \"react\";\nimport '../style/Asteroidbelt.css';\n\ninterface AsteroidbeltP {\n    radius: number\n    size: number,\n    orbitalCycleDay: number\n}\nfunction Asteroidbelt(props: AsteroidbeltP) {\n    const CanvasRef = useRef<HTMLCanvasElement>(null);\n    let FrameReq = -1;\n    let Rotation = 0;\n    let Speed = 360 / (props.orbitalCycleDay * 86400);\n\n    useEffect(() => {\n        FrameReq = (requestAnimationFrame(Rotate));\n        return () => {\n            console.log(\"Cancle\", FrameReq);\n            cancelAnimationFrame(FrameReq);\n        }\n    }, [props.orbitalCycleDay]);\n\n    useEffect(() => {\n        if (CanvasRef.current) {\n            console.log(\"Draw\", CanvasRef.current);\n            let context = CanvasRef.current.getContext(\"2d\") as CanvasRenderingContext2D;\n            context.fillStyle = \"white\";\n            for (let i = 0; i < 1000; i++) {\n                let x = Math.random() * CanvasRef.current.offsetWidth;\n                let y = Math.random() * CanvasRef.current.offsetHeight;\n                let radius = Math.random() * 2;\n                context.beginPath();\n                context.arc(x, y, radius, 0, 360);\n                context.fillStyle = \"rgba(223, 223, 223, 0.5)\";\n                context.fill();\n                // context.fillRect(x,y,1,1);\n            }\n            CanvasRef.current.style.setProperty(\"--circle\", `${(RemToPx(props.radius) - RemToPx(props.size)) / 2}px`);\n        }\n    }, [props.size]);\n\n    function Rotate() {\n        if (CanvasRef.current) \n            CanvasRef.current.style.transform = ['translate(-50%, -50%)', `rotate(${Rotation -= Speed}deg)`].join(' ')\n            FrameReq = (requestAnimationFrame(Rotate));\n    }\n\n    function RemToPx(n: number): number {\n        return n * parseFloat(getComputedStyle(document.documentElement).fontSize);\n    }\n\n    const Style: React.CSSProperties = {\n        width: props.radius+'rem',\n        height: props.radius+'rem',\n\t    // background: 'rgba(0, 0, 0, 0)',\n        zIndex: 5\n    }\n    return (\n        <canvas className=\"Asteroidbelt\" ref={CanvasRef} style={Style} width={RemToPx(props.radius)} height={RemToPx(props.radius)}>\n        </canvas>\n    )\n}\n\nexport default Asteroidbelt;","export default __webpack_public_path__ + \"static/media/Solar.537a82ef.svg\";","export default __webpack_public_path__ + \"static/media/MercuryShadow.9bfa5c8f.svg\";","export default __webpack_public_path__ + \"static/media/VenusShadow.5c08475f.svg\";","export default __webpack_public_path__ + \"static/media/EarthShadow.327277ae.svg\";","export default __webpack_public_path__ + \"static/media/MoonShadow.9602b674.svg\";","export default __webpack_public_path__ + \"static/media/MarsShadow.579d892e.svg\";","export default __webpack_public_path__ + \"static/media/JupiterShadow.47dd45c0.svg\";","export default __webpack_public_path__ + \"static/media/SaturnShadow.a45e5467.svg\";","export default __webpack_public_path__ + \"static/media/UranusShadow.dc12a817.svg\";","export default __webpack_public_path__ + \"static/media/NeptuneShadow.f1c14a74.svg\";","import React, { useEffect, useState } from 'react';\n\nfunction FPS() {\n    const [fps, setFps] = useState(\"\");\n    let Perf = performance.now();\n\n    useEffect(Counter, []);\n\n    function Counter() {\n        let delta = (performance.now() - Perf) / 1000;\n        Perf = performance.now();\n\n        setFps((1/delta).toFixed(2));\n        requestAnimationFrame(Counter);\n    }\n\n    return (\n        <span className=\"FPS\">\n            {fps}\n        </span>\n    )\n}\n\nexport default FPS;","import React from 'react';\nimport '../style/Config.css';\n\nimport FPS from './FPS';\n\ninterface ConfigP {\n    SpaceTime: number,\n    setSpaceTime: React.Dispatch<React.SetStateAction<number>>,\n    Scale: number,\n    setScale: React.Dispatch<React.SetStateAction<number>>,\n}\nfunction Config(props: ConfigP) {\n    return (\n        <div className=\"Config\">\n            <span>Config</span>\n            <div>\n                <span>Time</span> <input type=\"number\" defaultValue={props.SpaceTime} onChange={(e) => {props.setSpaceTime(Number(e.target.value) | 1)}}/>\n            </div>\n            <div>\n                <span>Scale</span> <input type=\"number\" defaultValue={props.Scale} onChange={(e) => {props.setScale(Number(e.target.value))}}/>\n            </div>\n            <div style={{textAlign: 'left'}}>\n                <span>FPS: </span> <FPS />\n            </div>\n        </div>\n    )\n}\n\nexport default Config;","import React, { LegacyRef, MutableRefObject, useRef, useState } from 'react';\nimport Orbit from './Orbit';\nimport Starfield from './Starfield';\nimport Asteroidbelt from './Asteroidbelt';\n\nimport SolarSvg from '../img/Solar.svg';\nimport MercurySvg from '../img/MercuryShadow.svg';\nimport VenusSvg from '../img/VenusShadow.svg';\nimport EarthSvg from '../img/EarthShadow.svg';\nimport MoonSvg from '../img/MoonShadow.svg';\nimport MarsSvg from '../img/MarsShadow.svg';\nimport JupiterSvg from '../img/JupiterShadow.svg';\nimport SaturnSvg from '../img/SaturnShadow.svg';\nimport UranusSvg from '../img/UranusShadow.svg';\nimport NpetuneSvg from '../img/NeptuneShadow.svg';\nimport Config from './Config';\n\nfunction Main() {\n\tconst [SpaceTime, setSpaceTime] = useState<number>(10000);\n\tconst [Scale, setScale] = useState<number>(0.6);\n\tconst SolarRef = useRef<HTMLImageElement>(null);\n\treturn (\n\t\t<>\n\t\t\t<Config SpaceTime={SpaceTime} setSpaceTime={setSpaceTime} Scale={Scale} setScale={setScale}/>\n\t\t\t<Starfield />\n\t\t\t<Solar size={4 * Scale} refs={SolarRef}>\n\t\t\t\t{/* <Orbit radius={15 * Scale} size={0.950 * Scale} img={MercurySvg} orbitalCycleDay={5 / SpaceTime}>\n\t\t\t\t\t<Orbit radius={5 * Scale} size={0.950 * Scale} img={MoonSvg} orbitalCycleDay={27 / SpaceTime} origin={SolarRef} />\n\t\t\t\t</Orbit> */}\n\t\t\t\t<Orbit radius={8 * Scale} size={0.950 * Scale} img={MercurySvg} orbitalCycleDay={88 / SpaceTime} />\n\t\t\t\t<Orbit radius={15 * Scale} size={0.950*1.5 * Scale} img={VenusSvg} orbitalCycleDay={225 / SpaceTime} />\n\t\t\t\t<Orbit radius={23 * Scale} size={0.950*1.6 * Scale} img={EarthSvg} orbitalCycleDay={365 / SpaceTime}>\n\t\t\t\t\t<Orbit radius={5 * Scale} size={0.950 * Scale} img={MoonSvg} orbitalCycleDay={27 / SpaceTime} origin={true} />\n\t\t\t\t</Orbit>\n\t\t\t\t<Orbit radius={38 * Scale} size={0.950*3.2 * Scale} img={MarsSvg} orbitalCycleDay={687 / SpaceTime} />\n\t\t\t\t<Asteroidbelt radius={55 * Scale} size={10 * Scale} orbitalCycleDay={4343.5 / SpaceTime} />\n\t\t\t\t<Orbit radius={60 * Scale} size={0.950*5 * Scale} img={JupiterSvg} orbitalCycleDay={4380 / SpaceTime} />\n\t\t\t\t<Orbit radius={70 * Scale} size={0.950*3 * Scale} img={SaturnSvg} orbitalCycleDay={10585 / SpaceTime} />\n\t\t\t\t<Orbit radius={80 * Scale} size={0.950*4 * Scale} img={UranusSvg} orbitalCycleDay={30660 / SpaceTime} />\n\t\t\t\t<Orbit radius={90 * Scale} size={0.950*3.5 * Scale} img={NpetuneSvg} orbitalCycleDay={60225 / SpaceTime} />\n\t\t\t</Solar>\n\t\t</>\n\t)\n}\n\ninterface SolarP {\n\tchildren?: any,\n\tsize: number,\n    refs: LegacyRef<HTMLImageElement>\n}\nfunction Solar(props: SolarP) {\n\tconst Style: React.CSSProperties = {\n\t\twidth: props.size+'rem',\n\t\theight: props.size+'rem',\n\t\tposition: 'absolute',\n\t\ttop: '50%',\n\t\tleft: '50%',\n\t\ttransform: 'translate(-50%, -50%)',\n\t\tdisplay: 'flex',\n\t\tverticalAlign: 'middle',\n\t\ttextAlign: 'center',\n\t\tmargin: 'auto',\n\t\tfilter: 'drop-shadow(0 0 20px #f3ad0d)'\n\t};\n\treturn (\n\t\t<div style={{width: '100%'}}>\n\t\t\t<img src={SolarSvg} style={Style} ref={props.refs} />\n\t\t\t{props.children}\n\t\t</div>\n\t)\n}\n\nexport default Main;","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './style/index.css';\nimport Main from './component/Main';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Main />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}